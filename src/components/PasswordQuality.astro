<password-quality></password-quality>

<script>
  import autoAnimate from "@formkit/auto-animate";

  customElements.define(
    "password-quality",
    class extends HTMLElement {
      private _input: HTMLInputElement | null = null;

      constructor() {
        super();

        autoAnimate(this);

        this._input = this.getClosestPasswordInput();
        if (!this._input) return;

        const moreThanEight = document.createElement("span");
        moreThanEight.setAttribute("aria-label", "More than 8 characters");
        const oneOrMoreUpper = document.createElement("span");
        oneOrMoreUpper.setAttribute(
          "aria-label",
          "One or more uppercase letters",
        );
        const oneOrMoreNumber = document.createElement("span");
        oneOrMoreNumber.setAttribute("aria-label", "One or more numbers");
        const oneOrMoreSpecial = document.createElement("span");
        oneOrMoreSpecial.setAttribute(
          "aria-label",
          "One or more special characters",
        );

        this._input.addEventListener("input", (event) => {
          const password = event.target as HTMLInputElement;

          if (password?.value.length > 0) {
            this.style.display = "grid";
          } else {
            this.style.display = "none";
          }

          if (password?.value.length > 8) {
            this.append(moreThanEight);
          } else {
            moreThanEight.remove();
          }

          if (/[A-Z]/g.test(password.value)) {
            this.append(oneOrMoreUpper);
          } else {
            oneOrMoreUpper.remove();
          }

          if (/\d/g.test(password.value)) {
            this.append(oneOrMoreNumber);
          } else {
            oneOrMoreNumber.remove();
          }

          if (/[@$!%*?&]/g.test(password.value)) {
            this.append(oneOrMoreSpecial);
          } else {
            oneOrMoreSpecial.remove();
          }
        });
      }

      // Get the closest password input element who is a sibling or sibling child
      getClosestPasswordInput(): HTMLInputElement | null {
        let current = this.previousElementSibling;
        if (!current) return null;

        if (current instanceof HTMLInputElement) {
          return current;
        } else {
          return current.querySelector("input[type=password]");
        }
      }
    },
  );
</script>

<style>
  password-quality {
    width: 100%;
    height: 0.25rem;
    display: none;
    overflow: hidden;
    border-radius: 100vmax;
    background-color: var(--clr-primary-light);
    grid-template-columns: repeat(4, 1fr);
    gap: 0.25rem;
    transition: all 0.5s ease;

    span {
      background-color: var(--clr-primary);
      transition: all 0.5s ease;
    }
  }
</style>
